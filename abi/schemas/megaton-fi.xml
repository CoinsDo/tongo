<abi>
    <interface name="megatonfi_router">
        <get_method name="get_mining_data" version="megaton"/>
        <get_method name="get_lp_data" version="megaton"/>
    </interface>
    <interface name="megatonfi_exchange">
        <get_method name="get_lp_swap_data" version="megaton"/>
        <get_method name="get_lp_mining_data" version="megaton"/>
    </interface>
    <get_method name="get_mining_data">
        <output version="megaton" fixed_length="true">
            <int name="total_mining_amount">uint64</int>
            <int name="total_mining_rate">uint64</int>
            <int name="mining_amount_per_sec">uint64</int>
            <int name="half_life">uint64</int>
            <int name="total_reward">uint64</int>
            <int name="unknown">uint64</int>
        </output>
    </get_method>
    <get_method name="get_lp_data">
        <output version="megaton" fixed_length="true" >
            <int name="pool_count">uint64</int>
            <cell name="jetton_pair_to_lp">any</cell>
            <cell name="lp_to_jetton_pair">any</cell>
        </output>
    </get_method>
    <get_method name="get_lp_swap_data">
        <output version="megaton" fixed_length="true" >
            <int name="swap_fee">uint64</int>
            <int name="min_amount">uint64</int>
            <slice name="router_address">msgaddress</slice>
            <slice name="jettonA_address">msgaddress</slice>
            <slice name="jettonA_wallet_address">msgaddress</slice>
            <int name="jettonA_balance">int257</int>
            <int name="jettonA_pending_balance">int257</int>
            <slice name="jettonB_address">msgaddress</slice>
            <slice name="jettonB_wallet_address">msgaddress</slice>
            <int name="jettonB_balance">int257</int>
            <int name="jettonB_pending_balance">int257</int>
        </output>
    </get_method>
<!--    // TODO: figure out the exact types of ints-->
<!--    a huli tut figure kogda 100% Coin ili uint128-->
    <get_method name="get_lp_mining_data">
        <output version="megaton" fixed_length="true" >
            <int name="mining_amount">uint64</int>
            <int name="datetime_amount">uint64</int>
            <int name="minable_time">uint64</int>
            <int name="half_life">uint64</int>
            <int name="last_index">uint64</int>
            <int name="last_mined">uint64</int>
            <cell name="mining_rate_cell">any</cell>
        </output>
    </get_method>
    <internal name="megaton_wton_mint">
        mint#77a33521 query_id:uint64 amount:Coins = InternalMsgBody;
    </internal>


<!--
   ext outs:


mint#00000015 account_addr:MsgAddressInt
              lp_supply_before_deposit:Coins lp_amount:Coins
              token0_amount:Coins token1_amount:Coins = ExtOutMsgBody;

claim#6b14cfe1 account_addr:MsgAddressInt _:Coins reward:Coins
               ^[ last_index:uint256, _:uint256 time:uint64 ] = ExtOutMsgBody;

burn#595f07bc account_addr:MsgAddressInt
              lp_supply_before_burn:Coins lp_amount:Coins
              token0_amount:Coins token1_amount:Coins = ExtOutMsgBody;-->
    <ext_out name="megaton_swap">
        swap#7362d09c account_addr:MsgAddressInt
        in_token_addr:MsgAddressInt in_amount:Coins
        ^[ out_token_addr:MsgAddressInt out_amount:Coins ] = ExtOutMsgBody;
    </ext_out>
    <ext_out name="megaton_update_mining_params">
        update_mining_params#56a8e920 pool_addr:MsgAddressInt
        last_mined:uint256 last_index:uint256
        ^[ last_mined:uint256 last_index:uint256] = ExtOutMsgBody;
    </ext_out>
</abi>
