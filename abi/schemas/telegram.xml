<abi>
    <types>
        nft_royalty_params$_ numerator:uint16 denominator:uint16 destination:MsgAddress = NftRoyaltyParams;
        teleitem_auction_config$_ beneficiar_address:MsgAddress initial_min_bid:Grams max_bid:Grams min_bid_step:uint8
        min_extend_time:uint32 duration:uint32 = TeleitemAuctionConfig;
        telemint_data$_ touched:Bool subwallet_id:uint32 public_key:bits256 collection_content:^Cell nft_item_code:^Cell
        royalty_params:^NftRoyaltyParams = TelemintData;
        telemint_unsigned_deploy$_ subwallet_id:uint32 valid_since:uint32 valid_till:uint32 username:FixedLengthText
        content:^Cell auction_config:^TeleitemAuctionConfig royalty_params:(Maybe ^NftRoyaltyParams) =
        TelemintUnsignedDeploy;
        telemint_restrictions$_ force_sender_address:(Maybe MsgAddress) rewrite_sender_address:(Maybe MsgAddress) =
        TelemintRestrictions;
        telemint_unsigned_deploy_v2$_ subwallet_id:uint32 valid_since:uint32 valid_till:uint32
        token_name:FixedLengthText
        content:^Cell auction_config:^TeleitemAuctionConfig royalty_params:(Maybe ^NftRoyaltyParams) restrictions:(Maybe
        ^TelemintRestrictions) = TelemintUnsignedDeployV2;
        telemint_token_info$_ name:FixedLengthText domain:FixedLengthText = TelemintTokenInfo;
    </types>
    <!--    Telegram   todo: attach internals to interfaces  -->


    <interface name="teleitem">
        <!--  <get_method name="get_telemint_auction_state" optional="true"/> when auction is not active returns error -->
        <!--  <get_method name="get_telemint_auction_config" optional="true"/> when auction is not active returns empty values -->
        <get_method name="get_telemint_token_name"/>
    </interface>
    <get_method name="get_telemint_auction_state">
        <output fixed_length="true">
            <slice name="bidder">msgaddress</slice>
            <int name="bid">int64</int>
            <int name="bid_ts">int64</int>
            <int name="min_bid">int64</int>
            <int name="end_time">int64</int>
        </output>
    </get_method>
    <get_method name="get_telemint_auction_config">
        <output fixed_length="true">
            <slice name="beneficiar">msgaddress</slice>
            <int name="initial_min_bid">int64</int>
            <int name="max_bid">int64</int>
            <int name="min_bid_step">int64</int>
            <int name="min_extend_time">int64</int>
            <int name="duration">int64</int>
        </output>
    </get_method>
    <get_method name="get_telemint_token_name">
        <output fixed_length="true">
            <slice name="username">text</slice>
        </output>
    </get_method>

<!-- todo: check all types https://github.com/TelegramMessenger/telemint/blob/main/telemint.tlb -->
    <internal name="telemint_deploy">
        telemint_msg_deploy#4637289a sig:bits512 msg:TelemintUnsignedDeploy = TelemintMsg;
    </internal>
    <internal name="telemint_deploy_v2">
        telemint_msg_deploy_v2#4637289b sig:bits512 msg:TelemintUnsignedDeployV2 = TelemintMsgV2;
    </internal>
    <internal name="teleitem_deploy">
        teleitem_msg_deploy#299a3e15 sender_address:MsgAddress bid:Grams token_info:^TelemintTokenInfo nft_content:^Cell
        auction_config:^TeleitemAuctionConfig royalty_params:^NftRoyaltyParams = TeleitemMsg;
    </internal>
    <internal name="teleitem_start_auction">
        teleitem_msg_start_auction#487a8e81 query_id:int64 auction_config:^TeleitemAuctionConfig = TeleitemMsg;
    </internal>
    <internal name="teleitem_cancel_auction">
        teleitem_msg_cancel_auction#371638ae query_id:int64 = TeleitemMsg;
    </internal>
    <internal name="teleitem_ok">
        teleitem_msg_ok#a37a0983 query_id:int64 = TeleitemMsg;
    </internal>
    <internal name="teleitem_return_bid">
        teleitem_return_bid#a43227e1 cur_lt:int64 = TeleitemMsg;
    </internal>

    <nft_payload name="teleitem_bid_info">
        nft_payload#38127de1 bid:Coins bid_ts:uint32 = NFTMsgPayload;
    </nft_payload>
</abi>